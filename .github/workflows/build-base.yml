name: üèóÔ∏è Build Base Image (One-Time Heavy Dependencies)

on:
  push:
    paths:
      - 'Dockerfile.base'
      - '.github/workflows/build-base.yml'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild base image'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: nuro-padel/base

jobs:
  build-base:
    name: üèóÔ∏è Build Base Image with Heavy Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Free Disk Space
      run: |
        echo "üßπ Freeing disk space for large build..."
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/share/powershell
        sudo rm -rf /usr/share/swift
        sudo docker image prune -af
        sudo docker container prune -f
        df -h
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Base Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.base
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Verify Base Image
      run: |
        echo "‚úÖ Base image built and pushed successfully!"
        echo "üì¶ Image: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest"
        echo "üéØ This image contains all heavy AI dependencies (PyTorch, MMCV, MMPose, YOLO-NAS)"
        echo "‚ö° Development builds will now take 1-2 minutes instead of 30!"