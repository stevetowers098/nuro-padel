name: Deploy NuroPadel Services

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Free Disk Space
      run: |
        echo "=== Initial Disk Usage ==="
        df -h
        echo "=== Cleaning up disk space ==="
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/share/swift
        sudo rm -rf /opt/hostedtoolcache
        sudo docker system prune -af
        echo "=== After cleanup ==="
        df -h

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Core Dependencies (No Cache)
      run: |
        python -m pip install --no-cache-dir --upgrade pip setuptools wheel
        pip install --no-cache-dir numpy opencv-python-headless fastapi uvicorn

    - name: Install PyTorch CPU (Space Optimized)
      run: |
        pip install --no-cache-dir torch==2.3.1+cpu torchvision==0.18.1+cpu --index-url https://download.pytorch.org/whl/cpu

    - name: Install YOLO Combined Service Dependencies
      run: |
        cd yolo-combined-service
        pip install --no-cache-dir -r requirements.txt

    - name: Install MMPose Service Dependencies
      run: |
        cd mmpose-service
        pip install --no-cache-dir pytz==2023.3 requests==2.28.2 rich==13.4.2 tqdm==4.65.0
        pip install --no-cache-dir mmpose
        pip install --no-cache-dir -r requirements.txt

    - name: Install YOLO-NAS Service Dependencies
      run: |
        cd yolo-nas-service
        pip install --no-cache-dir "numpy>=1.24.4" "docutils>=0.18,<0.19" "requests>=2.31.0"
        pip install --no-cache-dir super-gradients==3.7.1
        pip install --no-cache-dir -r requirements.txt

    - name: Check Disk Space After Installs
      run: df -h

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push YOLO Combined Service
      uses: docker/build-push-action@v5
      with:
        context: ./yolo-combined-service
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/yolo-combined:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Build and push MMPose Service
      uses: docker/build-push-action@v5
      with:
        context: ./mmpose-service
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/mmpose:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Build and push YOLO-NAS Service
      uses: docker/build-push-action@v5
      with:
        context: ./yolo-nas-service
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/yolo-nas:latest
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

    - name: Test Service Health Checks
      run: |
        echo "Testing service configurations..."
        # Test YOLO Combined Service
        cd yolo-combined-service && python -c "
        try:
            from tracknet.model import TrackNet
            print('✅ TrackNet model imports successfully')
        except Exception as e:
            print(f'⚠️  TrackNet import failed: {e}')
        
        try:
            from ultralytics import YOLO
            print('✅ YOLO imports successfully')
        except Exception as e:
            print(f'❌ YOLO import failed: {e}')
        "

    - name: Final Disk Space Check
      run: |
        echo "=== Final Disk Usage ==="
        df -h
        echo "=== Docker Images ==="
        docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}"

  test-integration:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Start services with docker-compose
      run: |
        echo "Starting NuroPadel services for integration testing..."
        docker-compose up -d --build

    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to start..."
        sleep 60

    - name: Test service endpoints
      run: |
        echo "Testing YOLO Combined Service..."
        curl -f http://localhost:8001/healthz || exit 1
        
        echo "Testing MMPose Service..."
        curl -f http://localhost:8002/healthz || exit 1
        
        echo "Testing YOLO-NAS Service..."
        curl -f http://localhost:8003/healthz || exit 1
        
        echo "✅ All services are healthy"

    - name: Test TrackNet Integration
      run: |
        echo "Testing TrackNet integration..."
        response=$(curl -s http://localhost:8001/healthz)
        echo "Health check response: $response"
        
        if echo "$response" | grep -q '"tracknet"'; then
          echo "✅ TrackNet integration detected in health check"
        else
          echo "ℹ️  TrackNet not available (expected without model weights)"
        fi

    - name: Cleanup
      run: |
        docker-compose down
        docker system prune -af
