    # ... (steps for downloading configs/weights if you keep them separate) ...

    - name: Deploy Application Code and Setup Environments
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        script: |
          # Stop all services
          echo "Stopping services..."
          sudo systemctl stop padel-api yolo11-service yolov8-service mmpose-service yolo-nas-service combined-service || true
          
          # Define the target application directory
          APP_DIR="/opt/padel/app"

          # Update code: Pull if repo exists, otherwise clone
          echo "Updating code in $APP_DIR..."
          if [ -d "$APP_DIR/.git" ]; then
            echo "Existing repository found. Pulling latest changes..."
            cd "$APP_DIR"
            git reset --hard HEAD # Discard any local changes
            git pull origin main # Or your default branch
            # Add any necessary git clean commands if you want to remove untracked files
            # git clean -fdx
          else
            echo "No existing repository found. Cloning fresh..."
            # Consider a shallow clone if history isn't needed on the VM:
            # git clone --depth 1 https://github.com/stevetowers098/nuro-padel.git "$APP_DIR"
            # Or full clone:
            rm -rf "$APP_DIR" # Remove if it's a non-git directory
            git clone https://github.com/stevetowers098/nuro-padel.git "$APP_DIR"
          fi
          
          # Ensure requirements directory and root requirements.txt are correctly referenced
          # These are now relative to /opt/padel since APP_DIR is /opt/padel/app
          # and requirements are at the root of the cloned repo.
          echo "Copying requirements files..."
          cp -r "$APP_DIR/requirements" /opt/padel/
          cp "$APP_DIR/requirements.txt" /opt/padel/
          
          # --- VIRTUAL ENVIRONMENT UPDATES ---
          # (These sections remain largely the same, ensuring paths to requirements files are correct)

          # Update shared environment
          echo "Updating shared environment (/opt/padel/shared/venv)..."
          cd /opt/padel/shared
          if [ ! -d "venv" ]; then python3 -m venv venv; fi
          source venv/bin/activate
          pip install --upgrade pip setuptools --quiet --no-cache-dir
          pip install -r /opt/padel/requirements.txt --quiet --no-cache-dir 
          deactivate
          
          # Update YOLO environment (/opt/padel/yolo/venv)
          echo "Updating YOLO environment..."
          cd /opt/padel/yolo
          if [ ! -d "venv" ]; then python3 -m venv venv; fi
          source venv/bin/activate
          pip install --upgrade pip setuptools --quiet --no-cache-dir
          pip install -r /opt/padel/requirements/yolo.txt --quiet --no-cache-dir 
          deactivate
          
          # Update MMPose environment (/opt/padel/mmpose/venv)
          echo "Updating MMPose environment..."
          cd /opt/padel/mmpose
          # ... (rest of MMPose venv setup as per last correct version) ...
          # (Includes: uninstall openxlab, upgrade pip, aggressive uninstall torch/triton, 
          #  install PyTorch CUDA 11.8, install openmim, verify PyTorch, mim install mmcv, 
          #  verify mmcv, install from requirements/mmpose.txt)
          # Make sure paths like ../requirements/mmpose.txt are still correct relative to /opt/padel/mmpose
          # If requirements are copied to /opt/padel/requirements/, path is /opt/padel/requirements/mmpose.txt
          # Based on cp -r "$APP_DIR/requirements" /opt/padel/
          # the path should be:
          pip install --no-cache-dir -r /opt/padel/requirements/mmpose.txt --quiet 
          deactivate
          
          # Update YOLO-NAS environment (/opt/padel/yolo-nas/venv)
          echo "Updating YOLO-NAS environment..."
          cd /opt/padel/yolo-nas
          if [ ! -d "venv" ]; then python3 -m venv venv; fi
          source venv/bin/activate
          pip install --upgrade pip setuptools --quiet --no-cache-dir
          pip install -r /opt/padel/requirements/yolo-nas.txt --quiet --no-cache-dir 
          deactivate
          
          # Skipping Combined environment update
          echo "Skipping Combined environment update as combined-service will be disabled."
          
          cd "$APP_DIR" # Ensure we are in the app directory for systemd WorkingDirectory context
          
          # --- SYSTEMD SERVICE FILE CREATION ---
          # (These definitions now need to be VERY CAREFUL about paths)

          # With this new "git pull" strategy, your repository root IS /opt/padel/app.
          # So, if your main.py is inside an 'app' subfolder IN YOUR REPO (repo_root/app/main.py),
          # its path on the VM will be /opt/padel/app/app/main.py.
          # If models are in repo_root/app/models/, path is /opt/padel/app/app/models/.

          echo "Creating/Updating systemd service files..."

          # Main API Service (padel-api)
          # Assumes main.py is at nuro-padel/app/main.py in your repo
          sudo tee /etc/systemd/system/padel-api.service > /dev/null << 'EOL'
          [Unit]
          Description=NuroPadel Main API Gateway
          After=network.target
          [Service]
          User=Towers
          Group=Towers
          WorkingDirectory=${APP_DIR}/app  # Path to nuro-padel/app/
          ExecStart=/opt/padel/shared/venv/bin/python main.py # main.py relative to WorkingDir
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=${APP_DIR}/app" # For imports like 'from utils...'
          [Install]
          WantedBy=multi-user.target
          EOL
          
          # YOLO11 Service
          # Assumes yolo11_service.py is at nuro-padel/app/models/yolo11_service.py
          sudo tee /etc/systemd/system/yolo11-service.service > /dev/null << 'EOL'
          [Unit]
          Description=YOLOv11 Pose and Object Detection Service
          After=network.target
          [Service]
          User=Towers
          Group=Towers
          WorkingDirectory=${APP_DIR}/app # So 'models' is a subdir
          ExecStart=/opt/padel/yolo/venv/bin/python -m models.yolo11_service
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=${APP_DIR}/app" # Python looks for 'models' package here
          [Install]
          WantedBy=multi-user.target
          EOL
          
          # YOLOv8 Service (similar adjustments)
          sudo tee /etc/systemd/system/yolov8-service.service > /dev/null << 'EOL'
          [Unit]
          Description=YOLOv8 Object Detection Service
          After=network.target
          [Service]
          User=Towers
          Group=Towers
          WorkingDirectory=${APP_DIR}/app 
          ExecStart=/opt/padel/yolo/venv/bin/python -m models.yolov8_service
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=${APP_DIR}/app" 
          [Install]
          WantedBy=multi-user.target
          EOL
          
          # MMPose Service (similar adjustments)
          sudo tee /etc/systemd/system/mmpose-service.service > /dev/null << 'EOL'
          [Unit]
          Description=MMPose Pose Estimation Service
          After=network.target
          [Service]
          User=Towers
          Group=Towers
          WorkingDirectory=${APP_DIR}/app 
          ExecStart=/opt/padel/mmpose/venv/bin/python -m models.mmpose_service
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=${APP_DIR}/app" 
          Environment="CUDA_HOME=/usr/local/cuda-11.8" 
          [Install]
          WantedBy=multi-user.target
          EOL
          
          # YOLO-NAS Service (similar adjustments)
          sudo tee /etc/systemd/system/yolo-nas-service.service > /dev/null << 'EOL'
          [Unit]
          Description=YOLO-NAS Pose Estimation Service
          After=network.target
          [Service]
          User=Towers
          Group=Towers
          WorkingDirectory=${APP_DIR}/app 
          ExecStart=/opt/padel/yolo-nas/venv/bin/python -m models.yolo_nas_service
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=${APP_DIR}/app" 
          [Install]
          WantedBy=multi-user.target
          EOL
          
          # Combined Service (Definition remains, but will be disabled)
          # ... (definition as before) ...
          
          # --- Start services and health checks ---
          # (This section remains the same as the last full script)
          # ... (reload daemon, enable/start ACTIVE_SERVICES, disable combined, sleep, status check, health check) ...
