name: Deploy NuroPadel to VM
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to VM
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        script: |
          # Stop all services
          echo "Stopping services..."
          sudo systemctl stop padel-api yolo11-service yolov8-service mmpose-service yolo-nas-service || true
          
          # Update code only (no model downloads)
          echo "Updating code..."
          cd /opt/padel
          
          # Backup current code (just in case)
          if [ -d "app" ]; then
            mv app app_backup_$(date +%Y%m%d_%H%M%S)
          fi
          
          # Clone repository and set up code
          git clone https://github.com/stevetowers098/nuro-padel.git temp
          mkdir -p app
          cp -r temp/app/* app/
          cp temp/requirements.txt .
          rm -rf temp
          
          # Install dependencies
          echo "Installing dependencies..."
          source shared/venv/bin/activate
          pip install -r requirements.txt
          
          # Create systemd service files
          echo "Creating service files..."
          
          # Create service files with proper paths and configurations
          sudo tee /etc/systemd/system/padel-api.service > /dev/null << 'EOL'
          [Unit]
          Description=NuroPadel API
          After=network.target
          
          [Service]
          User=padel
          Group=padel
          WorkingDirectory=/opt/padel/app
          ExecStart=/opt/padel/shared/venv/bin/python -m app.main
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=/opt/padel"
          
          [Install]
          WantedBy=multi-user.target
          EOL
          
          sudo tee /etc/systemd/system/yolo11-service.service > /dev/null << 'EOL'
          [Unit]
          Description=YOLO11 Pose Service
          After=network.target
          
          [Service]
          User=padel
          Group=padel
          WorkingDirectory=/opt/padel/app
          ExecStart=/opt/padel/shared/venv/bin/python -m app.models.yolo11_service
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=/opt/padel"
          
          [Install]
          WantedBy=multi-user.target
          EOL
          
          sudo tee /etc/systemd/system/yolov8-service.service > /dev/null << 'EOL'
          [Unit]
          Description=YOLOv8 Tracking Service
          After=network.target
          
          [Service]
          User=padel
          Group=padel
          WorkingDirectory=/opt/padel/app
          ExecStart=/opt/padel/shared/venv/bin/python -m app.models.yolov8_service
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=/opt/padel"
          
          [Install]
          WantedBy=multi-user.target
          EOL
          
          sudo tee /etc/systemd/system/mmpose-service.service > /dev/null << 'EOL'
          [Unit]
          Description=MMPose Biomechanics Service
          After=network.target
          
          [Service]
          User=padel
          Group=padel
          WorkingDirectory=/opt/padel/app
          ExecStart=/opt/padel/shared/venv/bin/python -m app.models.mmpose_service
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=/opt/padel"
          
          [Install]
          WantedBy=multi-user.target
          EOL
          
          sudo tee /etc/systemd/system/yolo-nas-service.service > /dev/null << 'EOL'
          [Unit]
          Description=YOLO-NAS Pose Service
          After=network.target
          
          [Service]
          User=padel
          Group=padel
          WorkingDirectory=/opt/padel/app
          ExecStart=/opt/padel/shared/venv/bin/python -m app.models.yolo_nas_service
          Restart=always
          RestartSec=10
          Environment="PYTHONPATH=/opt/padel"
          
          [Install]
          WantedBy=multi-user.target
          EOL
          
          # Reload systemd and start services
          echo "Starting services..."
          sudo systemctl daemon-reload
          sudo systemctl enable padel-api yolo11-service yolov8-service mmpose-service yolo-nas-service
          sudo systemctl start padel-api yolo11-service yolov8-service mmpose-service yolo-nas-service
          
          # Verify services
          echo "Verifying services..."
          for service in padel-api yolo11-service yolov8-service mmpose-service yolo-nas-service; do
            status=$(systemctl is-active $service)
            echo "$service: $status"
            if [ "$status" != "active" ]; then
              echo "WARNING: $service failed to start properly"
              echo "Last 10 log lines:"
              sudo journalctl -u $service -n 10 --no-pager
            fi
          done
          
          echo "Deployment completed"